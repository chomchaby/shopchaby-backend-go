// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateCart(ctx context.Context, arg CreateCartParams) (Cart, error)
	CreateFavorite(ctx context.Context, arg CreateFavoriteParams) (Favorite, error)
	CreateProduct(ctx context.Context, arg CreateProductParams) (Product, error)
	CreateProductCategory(ctx context.Context, arg CreateProductCategoryParams) (ProductCategory, error)
	CreateProductImage(ctx context.Context, arg CreateProductImageParams) (ProductImage, error)
	CreatePurchase(ctx context.Context, arg CreatePurchaseParams) (Purchase, error)
	CreateStore(ctx context.Context, arg CreateStoreParams) (Store, error)
	CreateSubproduct(ctx context.Context, arg CreateSubproductParams) (Subproduct, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteCart(ctx context.Context, arg DeleteCartParams) error
	DeleteFavorite(ctx context.Context, arg DeleteFavoriteParams) error
	DeleteProduct(ctx context.Context, id uuid.UUID) error
	DeleteProductCategory(ctx context.Context, name string) error
	DeleteProductImage(ctx context.Context, id uuid.UUID) error
	DeleteProductImagesByProductID(ctx context.Context, productID uuid.UUID) error
	DeletePurchase(ctx context.Context, id uuid.UUID) error
	DeleteStore(ctx context.Context, id uuid.UUID) error
	DeleteSubproduct(ctx context.Context, id uuid.UUID) error
	DeleteUser(ctx context.Context, email string) error
	GetCart(ctx context.Context, arg GetCartParams) (Cart, error)
	GetFavorite(ctx context.Context, arg GetFavoriteParams) (Favorite, error)
	GetProduct(ctx context.Context, id uuid.UUID) (Product, error)
	GetProductCategory(ctx context.Context, name string) (ProductCategory, error)
	GetProductImage(ctx context.Context, id uuid.UUID) (ProductImage, error)
	GetPurchase(ctx context.Context, id uuid.UUID) (Purchase, error)
	GetStore(ctx context.Context, id uuid.UUID) (Store, error)
	GetStoreByUserEmail(ctx context.Context, userEmail string) (Store, error)
	GetSubproduct(ctx context.Context, id uuid.UUID) (Subproduct, error)
	GetUser(ctx context.Context, email string) (User, error)
	ListCarts(ctx context.Context) ([]Cart, error)
	ListCartsByUser(ctx context.Context, userEmail string) ([]Cart, error)
	ListFavorites(ctx context.Context) ([]Favorite, error)
	ListFavoritesByUser(ctx context.Context, userEmail string) ([]Favorite, error)
	ListProductCategories(ctx context.Context) ([]ProductCategory, error)
	ListProductImages(ctx context.Context) ([]ProductImage, error)
	ListProductImagesByProductID(ctx context.Context, productID uuid.UUID) ([]ProductImage, error)
	ListProducts(ctx context.Context) ([]Product, error)
	ListProductsByCategory(ctx context.Context, category string) ([]Product, error)
	ListProductsByFilter(ctx context.Context, arg ListProductsByFilterParams) ([]Product, error)
	ListProductsByName(ctx context.Context, name string) ([]Product, error)
	ListProductsByStoreAndCategory(ctx context.Context, arg ListProductsByStoreAndCategoryParams) ([]Product, error)
	ListPurchases(ctx context.Context) ([]Purchase, error)
	ListPurchasesByBuyer(ctx context.Context, buyerEmail string) ([]Purchase, error)
	ListPurchasesByBuyerAndStore(ctx context.Context, arg ListPurchasesByBuyerAndStoreParams) ([]Purchase, error)
	ListStores(ctx context.Context, arg ListStoresParams) ([]Store, error)
	ListSubproductsByProductID(ctx context.Context, productID uuid.UUID) ([]Subproduct, error)
	ListUsers(ctx context.Context) ([]User, error)
	UpdateCart(ctx context.Context, arg UpdateCartParams) (Cart, error)
	UpdateProduct(ctx context.Context, arg UpdateProductParams) (Product, error)
	UpdateProductCategory(ctx context.Context, arg UpdateProductCategoryParams) (ProductCategory, error)
	UpdateProductImage(ctx context.Context, arg UpdateProductImageParams) (ProductImage, error)
	UpdateStore(ctx context.Context, arg UpdateStoreParams) (Store, error)
	UpdateSubproduct(ctx context.Context, arg UpdateSubproductParams) (Subproduct, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
